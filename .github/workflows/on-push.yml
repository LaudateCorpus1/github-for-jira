name: Push

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Cache node_modules
        id: cache-primes
        uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{hashFiles('**/package-lock.json')}}-node_modules
      - run: npm install
      - run: npm run lint
      - run: npm run build

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - "5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis
        ports:
          - "6379:6379"

    steps:
      - uses: actions/checkout@v1
      - uses: volta-cli/action@v1
      - name: Cache node_modules
        id: cache-primes
        uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{hashFiles('**/package-lock.json')}}-node_modules
      - run: npm install
      - run: npm run db:test
      - name: Run tests
        env:
          NODE_ENV: test
          REDIS_HOST: localhost
          REDIS_PORT: ${{ job.services.redis.ports[6379] }}
          POSTGRES_HOST: localhost
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        run: npm test

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Build Dockerfile
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile
          push: false

      - name: Build Dockerfile.prod
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile.prod
          push: false
